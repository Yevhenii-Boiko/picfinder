{"mappings":"YAMO,SAASA,EAAUC,EAAaC,EAAMC,GAC3C,IAAMC,EAAS,IAAIC,gBAAgB,CACjCC,WAAY,QACZC,YAAa,aACbC,WAAY,SAGd,OAAOC,MACL,GAAgBC,OAdH,0BAcD,MAAmBA,OAAfN,EAAO,UAAyBM,OAAjBR,EAAK,cAAiCQ,OAArBP,EAAc,SAAoBO,OAbtE,qCAaiE,OAAiBA,OAAZT,IAClFU,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAK3B,OAAOH,EAASI,M,ICpBpB,IAAMC,EAAOC,SAASC,cAAc,gBAC9BC,EAAUF,SAASC,cAAc,YACjCE,EAAWH,SAASC,cAAc,cAClCG,EAAQJ,SAASC,cAAc,UAC/BI,EAAQL,SAASC,cAAc,UAC/BK,EAAkBN,SAASC,cAAc,kBAE/CF,EAAKQ,iBAAiB,UAOtB,SAAsBC,GAIpB,GAHAA,EAAIC,mBAEJC,EAAQF,EAAIG,cAAcC,SAAS7B,YAAY8B,OAM7C,OAJAR,EAAMS,YAAc,uBACpBC,YAAW,WACTV,EAAMS,YAAc,E,GACnB,KAILhC,EAAU4B,EADVM,EAAO,EAdG,IAgBPvB,MAAK,SAAAwB,G,IAAGC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UACO,IAAhBD,EAAKE,SACPjB,EAASkB,QAAS,EAClBjB,EAAMU,YACJ,2EACFC,YAAW,WACTX,EAAMU,YAAc,E,GACnB,MAGDI,EAAKE,OAASD,IAChBhB,EAASkB,QAAS,GAqExBnB,EAAQoB,UAAY,GACpBhB,EAAgBQ,YAAc,GAlE1BS,EAAcL,GAEVA,EAAKE,SAAWD,GAA6B,IAAhBD,EAAKE,SACpCd,EAAgBQ,YACd,8DAEJE,GAAQ,C,IAGTQ,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,IACzBG,SAAQ,W,OAAM7B,EAAK8B,O,OA5CxB1B,EAASI,iBAAiB,SA+C1B,WACEzB,EAAU4B,EAAOM,EA7CP,IA8CPvB,MAAK,SAAAwB,G,IAAGC,EAAID,EAAJC,KACHA,EAAKE,OA/CH,KAgDJjB,EAASkB,QAAS,EAClBf,EAAgBQ,YACd,8DAEJE,GAAQ,EACRO,EAAcL,E,IAGfM,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,OAzD9B,IAAIf,EAAQ,GAERM,EAAO,EA0DX,SAASO,EAAcO,GACrB,IAAMC,EAASD,EACZE,KACC,SAAAf,G,IACEgB,EAAYhB,EAAZgB,aAEAC,GADajB,EAAbkB,cACIlB,EAAJiB,MACAE,EAAKnB,EAALmB,MACAC,EAAKpB,EAALoB,MACAC,EAAQrB,EAARqB,SACAC,EAAStB,EAATsB,UAEA,MAAO,6CAEqB/C,OAAtByC,EAAa,WAGTzC,OAHkB0C,EAAK,0FAMvB1C,OAHA4C,EAAM,+DAMH5C,OAHH6C,EAAM,kEAMF7C,OAHD8C,EAAS,mEAGE9C,OAAV+C,EAAU,mC,IAM3BC,KAAK,IACRtC,EAAQuC,mBAAmB,YAAaV,E","sources":["services/API-service.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '33163433-7381312326b7cb4a7310bb1a7';\n// let page = 1;\n// const imagesPerPage = 9;\n// const searchQuery = '';\n\nexport function getImages(searchQuery, page, imagesPerPage) {\n  const params = new URLSearchParams({\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n  return fetch(\n    `${BASE_URL}/?${params}&page=${page}&per_page=${imagesPerPage}&key=${API_KEY}&q=${searchQuery}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    // page += 1;\n    // console.log('page in API', page);\n\n    return response.json();\n  });\n}\n","import { getImages } from '../services/API-service';\n\nconst form = document.querySelector('.search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadMore = document.querySelector('.load-more');\nconst error = document.querySelector('.error');\nconst alert = document.querySelector('.alert');\nconst endOfCollection = document.querySelector('.collectionEnd');\n\nform.addEventListener('submit', onFormSubmit);\nloadMore.addEventListener('click', onLoadMoreClick);\n\nlet value = '';\nlet limit = 15;\nlet page = 1;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  value = evt.currentTarget.elements.searchQuery.value;\n  if (!value) {\n    alert.textContent = 'Enter something';\n    setTimeout(() => {\n      alert.textContent = '';\n    }, 3000);\n    return;\n  }\n  page = 1;\n  getImages(value, page, limit)\n    .then(({ hits, totalHits }) => {\n      if (hits.length === 0) {\n        loadMore.hidden = true;\n        error.textContent =\n          'Sorry, there are no images matching your search query. Please try again.';\n        setTimeout(() => {\n          error.textContent = '';\n        }, 3000);\n      }\n\n      if (hits.length < totalHits) {\n        loadMore.hidden = false;\n      }\n      clearMarkup();\n      // console.log('Before formSubmit', page);\n      renderGallery(hits);\n\n      if (hits.length === totalHits && hits.length !== 0) {\n        endOfCollection.textContent =\n          \"We're sorry, but you've reached the end of search results.\";\n      }\n      page += 1;\n      // console.log('onFormSubmit', page);\n    })\n    .catch(err => console.log(err))\n    .finally(() => form.reset());\n}\n\nfunction onLoadMoreClick() {\n  getImages(value, page, limit)\n    .then(({ hits }) => {\n      if (hits.length < limit) {\n        loadMore.hidden = true;\n        endOfCollection.textContent =\n          \"We're sorry, but you've reached the end of search results.\";\n      }\n      page += 1;\n      renderGallery(hits);\n      // console.log('onLoad', page);\n    })\n    .catch(err => console.log(err));\n}\n\nfunction renderGallery(data) {\n  const markup = data\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n  <div class=\"photo-card\">\n  <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes: ${likes}</b>\n    </p>\n    <p class=\"info-item\">\n      <b>Views: ${views}</b>\n    </p>\n    <p class=\"info-item\">\n      <b>Comments: ${comments}</b>\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads: ${downloads}</b>\n    </p>\n  </div>\n</div>`;\n      }\n    )\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction clearMarkup() {\n  gallery.innerHTML = '';\n  endOfCollection.textContent = '';\n}\n"],"names":["$65cfbd7ea69e6639$export$f6086c1309fc54c0","searchQuery","page","imagesPerPage","params","URLSearchParams","image_type","orientation","safesearch","fetch","concat","then","response","ok","Error","statusText","json","$b8f9b7833fa37166$var$form","document","querySelector","$b8f9b7833fa37166$var$gallery","$b8f9b7833fa37166$var$loadMore","$b8f9b7833fa37166$var$error","$b8f9b7833fa37166$var$alert","$b8f9b7833fa37166$var$endOfCollection","addEventListener","evt","preventDefault","$b8f9b7833fa37166$var$value","currentTarget","elements","value","textContent","setTimeout","$b8f9b7833fa37166$var$page","param","hits","totalHits","length","hidden","innerHTML","$b8f9b7833fa37166$var$renderGallery","catch","err","console","log","finally","reset","data","markup","map","webformatURL","tags","largeImageURL","likes","views","comments","downloads","join","insertAdjacentHTML"],"version":3,"file":"index.d3d7359d.js.map"}